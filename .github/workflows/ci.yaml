name: Docker image build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAILROOM_REPO: rapidpro/mailroom
      GREP_TIMEOUT: 60
    strategy:
      matrix:
        MAILROOM_VERSION: ["7.4.1"]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Run Redis
        run: docker run --name redis -d -p 6379:6379 redis:3.2.4
      - name: Install PostgreSQL
        uses: nyaruka/postgis-action@v2
        with:
          postgresql version: "13"
          postgis version: "3.1"
          postgresql db: temba
          postgresql user: temba
          postgresql password: temba
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          context: .
          tags: mailroom
          build-args: |
            MAILROOM_REPO=${{env.MAILROOM_REPO}}
            MAILROOM_VERSION=${{matrix.MAILROOM_VERSION}}
      - name: Test image
        run: |
          docker run --name mailroom --env-file docker.envfile --link postgis --link redis --publish 8090:8090 --detach mailroom
          timeout ${{env.GREP_TIMEOUT}} grep -m 1 'mailroom started' <(docker logs --follow mailroom 2>&1)
          curl http://localhost:8090/ | grep -m 1 'mailroom'
          curl http://localhost:8090/ | grep -m 1 ${{matrix.MAILROOM_VERSION}}
      - name: debug outputs
        if: always()
        run: |
          docker ps
          docker images
          docker logs mailroom
      - name: Create image tags
        uses: docker/metadata-action@v5
        id: tags
        with:
          images: |
            ${{ vars.IMAGE }}
          tags: |
            type=pep440,pattern=v{{major}},value=${{matrix.MAILROOM_VERSION}}
            type=pep440,pattern=v{{major}}.{{minor}},value=${{matrix.MAILROOM_VERSION}}
            type=pep440,pattern=v{{version}},value=${{matrix.MAILROOM_VERSION}}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.tags.outputs.tags}}
          context: .
          build-args: |
            MAILROOM_REPO=${{env.MAILROOM_REPO}}
            MAILROOM_VERSION=${{matrix.MAILROOM_VERSION}}
